/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetsir.interfaces;

import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.*;
import projetsir.Parametres;

/**
 *
 * @author yann
 */
public class Verif_Frag_Horizontale extends javax.swing.JFrame {
    int nbS;
    Parametres param;
    int nbF;
    ArrayList<String> list_select;
    int nbT;
    ArrayList<String> list_frag;
    /**
     * Creates new form Verif_Frag_Horizontale
     */
    public Verif_Frag_Horizontale(ArrayList<String> list_select,JPanel pan) {
        initComponents();
        int cpt=0;
        param=new Parametres();
        this.list_select=list_select;
        nbS=param.get_nb_serveurs();
        JOptionPane jop = new JOptionPane();
        String nbFS="";
        String message="Nombre de fragments ?";
        nbF=0;
        while(!nbFS.matches("^\\d+$") || nbFS.matches("") || nbF<=1)
        {    
            nbFS = jop.showInputDialog(null, message, JOptionPane.QUESTION_MESSAGE);
            if(nbFS.matches("^\\d+$") && !nbFS.matches(""))
            {
                nbF=Integer.parseInt(nbFS);
            }
            else
                message="Nombre de fragments doit être supérieur à 2.";
        }
        this.resume_mint.add(pan);
        String splitA[];
        String splitB[];
        String signe;
        String signe2;
        for(int i=0;i<list_select.size();i++)
        {
            splitA=list_select.get(i).split("@");
            cpt=splitA.length*2;
        }
        GridLayout gd=new GridLayout(nbF+1,cpt+1);
        this.pan_dis_f.setLayout(gd);
        for(int i=0;i<list_select.size();i++)
        {
            splitA=list_select.get(i).split("@");
            for(int j=-1;j<splitA.length;j++)
            {
                if(j==-1)
                {
                    JLabel lab=new JLabel();
                    lab.setText("");
                    this.pan_dis_f.add(lab);
                }
                else
                {
                    splitB=splitA[j].split(";");
                    signe=splitB[2];
                    signe2=this.inverse_signe(signe);   
                    JLabel lab=new JLabel();
                    lab.setText(splitB[1]+signe+splitB[3]);
                    this.pan_dis_f.add(lab);
                    JLabel lab2=new JLabel();
                    lab2.setText(splitB[1]+signe2+splitB[3]);
                    this.pan_dis_f.add(lab2);
                }
            }
        }
        int cptF=1;
        for(int i=cpt+1;i<(nbF+1)*(cpt+1);i++)
        {
            if((i%(cpt+1))==0)
            {
                JLabel lab=new JLabel();
                lab.setText("Fragment "+cptF);
                this.pan_dis_f.add(lab);
                cptF++;
            }
            else
            {
                JCheckBox osef=new JCheckBox();
                this.pan_dis_f.add(osef);
            }
        }
        nbT=cpt;
        GridLayout gd2=new GridLayout(nbF+1,nbS+1);
        this.pan_dis_s.setLayout(gd2);
        int cptS=1;
        cptF=1;
        for(int i=0;i<(nbS+1)*(nbF+1);i++)
        {
            if(i<nbS+1)
            {
                System.out.println("PIPI");
                if(i==0)
                {
                    JLabel jl=new JLabel();
                    jl.setText("");
                    this.pan_dis_s.add(jl);
                }
                else
                {
                    JLabel jl=new JLabel();
                    jl.setText("Site "+param.get_num_serveur(cptS-1));
                    this.pan_dis_s.add(jl);
                    cptS++;
                }
            }
            else
            {
                System.out.println("CACA");
                if((i%(nbS+1))==0)
                {
                    System.out.println("BITE");
                    JLabel jl=new JLabel();
                    jl.setText("Fragment "+cptF);
                    this.pan_dis_s.add(jl);
                    cptF++;
                
                }
                else
                {
                    JCheckBox osef=new JCheckBox();
                    this.pan_dis_s.add(osef);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        annuler_button = new javax.swing.JButton();
        reinit_button = new javax.swing.JButton();
        valider_button = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        resume_mint = new javax.swing.JPanel();
        pan_dis_f = new javax.swing.JPanel();
        pan_dis_s = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(1, 3));

        annuler_button.setText("Annuler");
        annuler_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annuler_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(annuler_button);

        reinit_button.setText("Reinitialiser");
        reinit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinit_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(reinit_button);

        valider_button.setText("Valider");
        jPanel1.add(valider_button);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 3));

        resume_mint.setLayout(new java.awt.GridLayout(1, 0));
        jPanel2.add(resume_mint);

        javax.swing.GroupLayout pan_dis_fLayout = new javax.swing.GroupLayout(pan_dis_f);
        pan_dis_f.setLayout(pan_dis_fLayout);
        pan_dis_fLayout.setHorizontalGroup(
            pan_dis_fLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );
        pan_dis_fLayout.setVerticalGroup(
            pan_dis_fLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        jPanel2.add(pan_dis_f);

        javax.swing.GroupLayout pan_dis_sLayout = new javax.swing.GroupLayout(pan_dis_s);
        pan_dis_s.setLayout(pan_dis_sLayout);
        pan_dis_sLayout.setHorizontalGroup(
            pan_dis_sLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );
        pan_dis_sLayout.setVerticalGroup(
            pan_dis_sLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        jPanel2.add(pan_dis_s);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reinit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinit_buttonActionPerformed
        for(int i=0;i<(nbT+1)*(nbF+1);i++)
        {
            if(this.pan_dis_f.getComponent(i).getClass()==JCheckBox.class)
            {
                 JCheckBox jb=(JCheckBox)this.pan_dis_f.getComponent(i);
                   if(jb.isSelected())
                   {
                        jb.setSelected(false);
                        
                   }
            }
        }
        for(int i=0;i<(nbS+1)*(nbF+1);i++)
        {
            if(this.pan_dis_s.getComponent(i).getClass()==JCheckBox.class)
            {
                 JCheckBox jb=(JCheckBox)this.pan_dis_s.getComponent(i);
                   if(jb.isSelected())
                   {
                        jb.setSelected(false);
                        
                   }
            }
        }
    }//GEN-LAST:event_reinit_buttonActionPerformed

    private void annuler_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annuler_buttonActionPerformed
            this.setVisible(false);
    }//GEN-LAST:event_annuler_buttonActionPerformed
    private String inverse_signe(String signe)
    {
        String res = "";
        switch(signe)
        {
            case ">" : res = "<="; break;
            case "<" : res = ">="; break;
            case ">=" : res = "<"; break;
            case "<=" : res = ">"; break;
            case "=" : res = "<>"; break;
            case "<>" : res = "="; break;
            case "LIKE" : res = "NOT LIKE"; break;
            case "NOT LIKE" : res = "LIKE"; break;
        }
        return res;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Verif_Frag_Horizontale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Verif_Frag_Horizontale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Verif_Frag_Horizontale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Verif_Frag_Horizontale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annuler_button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pan_dis_f;
    private javax.swing.JPanel pan_dis_s;
    private javax.swing.JButton reinit_button;
    private javax.swing.JPanel resume_mint;
    private javax.swing.JButton valider_button;
    // End of variables declaration//GEN-END:variables
}
